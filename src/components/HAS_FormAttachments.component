<apex:component controller="bg_HAS_FormAttachmentsController" allowDML="TRUE">
    <apex:attribute name="caseNominationId" description="submission case record" type="Id" assignTo="{!NominationId}" required="TRUE"/>
    <apex:attribute name="makeReadOnly" description="This will make the inputFile field unrendered" type="Boolean"/>
    <apex:attribute name="attachmentCategoryKeyword" description="The Attachment type" type="String" assignTo="{!attachmentCategory}" required="TRUE"/>
    <apex:attribute name="prevPage" description="The previous page" type="String" assignTo="{!previousPageName}" />
    <apex:form styleClass="main">

        <c:HAS_Page_Messages />

        <div class="form-group">
            <apex:inputFile value="{!newAttachment.Body}" fileName="{!newAttachment.Name}" contentType="{!contentType}" accept="{!$Label.HAS_Accepted_File_Formats}" styleClass="standardText" rendered="{!!makeReadOnly}"/>
            <apex:commandLink styleClass="clrButton" value="Upload attachment"  action="{!uploadAttachment}" onclick="return checkFileSize();" rendered="{!!makeReadOnly}"/>
        </div>

    </apex:form>
    <script>
        function checkFileSize()
        {
            var goodSize = true;
            jQuery('input[type=file]').each(function()
            {
                if(typeof this.files[0] !== 'undefined')
                {
                    var file = this.files[0],
                        size = typeof ActiveXObject !== 'undefined' ? getIEFileSize(file):file.fileSize || file.size;

                    goodSize = 25000000 > size;
                    if(!goodSize)
                    {
                        alert(this.files[0].name +' is too large - please choose a file that is 25Mb or less');
                    }
                    else
                    {
                        if (2000000 < size)
                        {
                            goodSize=confirm('The file size is ' + size +
                                ' bytes - this may take some time. Are you sure you wish to continue');
                        }
                    }

                    return goodSize;
                }
            });
    return goodSize;
}
    </script>
</apex:component>